// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
  //output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  password     String
  role         String
  phone        String
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Provider Provider?
}

model Provider {
  id           String   @id @default(uuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  businessName String
  description  String?
  address      String?
  photoUrl     String?
  linkCode     String   @unique
  active       Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  service      Service?
}

model ServiceOption {
  id        String   @id @default(uuid())
  name      String
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  serviceId String
  service   Service  @relation("ServiceOptions", fields: [serviceId], references: [id])
}

model Service {
  id          String          @id @default(uuid())
  providerId  String          @unique
  provider    Provider        @relation(fields: [providerId], references: [id])
  name        String
  description String?
  duration    Int // Duration in minutes
  price       Float
  options     ServiceOption[] @relation("ServiceOptions")
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}
